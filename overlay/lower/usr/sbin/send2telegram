#!/bin/sh

plugin="telegram"

. /sbin/common-plugins

show_help() {
	echo "Usage: $0 [-t token] [-c channel] [-m message] [-p photo] [-s] [-b] [-v] [-h]
  -t token    Telegram bot token. See https://t.me/botfather if you need one.
  -c channel  Telegram channel ID. See https://gist.github.com/mraaroncruz/e76d19f7d61d59419002db54030ebe35
  -m message  Message text.
  -p photo    Path to photo file.
    -i          Send inline.
    -a          Send as attachment.
  -s          Disable notification.
  -v          Verbose output.
  -h          Show this help.
"
	quit_clean 0
}

# default values
telegram_disable_notification=false

# override config values with command line arguments
while getopts ac:im:p:st:vh flag; do
	case "$flag" in
		a) telegram_as_attachment="true" ;;
		c) telegram_channel=$OPTARG ;;
		i) telegram_as_photo="true" ;;
		m) telegram_message=$OPTARG ;;
		p) telegram_photo=$OPTARG ;;
		s) telegram_disable_notification=true ;;
		t) telegram_token=$OPTARG ;;
		v) verbose="true" ;;
		h | *) show_help ;;
	esac
done

[ "false" = "$telegram_enabled" ] && die "Sending to Telegram is disabled."
# validate mandatory values
[ -z "$telegram_token" ] && die "Telegram token not found"
[ -z "$telegram_channel" ] && die "Telegram channel not found"

if [ -z "$telegram_message" ]; then
	telegram_message="$(echo "$telegram_caption" | sed "s/%hostname/$(hostname -s)/;s/%datetime/$(date +"%F %T")/")"

	if [ -z "$telegram_photo" ]; then
		snapshot=/tmp/snapshot.jpg
		[ -f "$snapshot" ] || die "Cannot find a snapshot"

		attachment=$(mktemp -u /tmp/snapshot-XXXXXX).jpg
		delete_tempfile="true"
		cp $snapshot $attachment

		telegram_photo=$attachment
	fi
fi

build_cmd "$CURL"
[ "true" = "$telegram_socks5_enabled" ] && use_socks5
build_cmd "-H 'Content-Type: multipart/form-data'"
build_cmd "-F 'chat_id=$telegram_channel'"
build_cmd "-F 'disable_notification=$telegram_disable_notification'"
build_cmd "--url https://api.telegram.org/bot$telegram_token/"

if [ -n "$attachment" ]; then
	if [ "true" = "$telegram_as_attachment" ]; then
		log_and_run "${command}sendDocument -F 'document=@$telegram_photo' -F 'caption=$telegram_message'"
	elif [ "true" = "$telegram_as_photo" ]; then
		log_and_run "${command}sendPhoto -F 'photo=@$telegram_photo' -F 'caption=$telegram_message'"
	else
		log_and_run "${command}sendMessage -F 'text=Please select a method of sending (inline photo or file attachmnet).'"
	fi
else
	log_and_run "${command}sendMessage -F 'text=$telegram_message'"
fi

[ "true" = "$delete_tempfile" ] && [ -f "$attachment" ] && rm "$attachment"
[ "true" = "$verbose" ] && cat $LOG_FILE

quit_clean 0
